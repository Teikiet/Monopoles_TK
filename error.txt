AttributeError                            Traceback (most recent call last)
File ~/.local/lib/python3.10/site-packages/PIL/ImageFile.py:515, in _save(im, fp, tile, bufsize)
    514 try:
--> 515     fh = fp.fileno()
    516     fp.flush()

AttributeError: '_idat' object has no attribute 'fileno'

During handling of the above exception, another exception occurred:

SystemError                               Traceback (most recent call last)
/home/teikiet/Monopoles/Analyzing/2Dvertex.ipynb Cell 2 line 1
    107 noise_adder.run(event, station, det, amplitude=noise_level, type='rayleigh')
    108 channel_resampler.run(event, station, det, sampling_rate=sampling_rate)
--> 109 vertex_reconstructor.run(
    110     event,
    111     station,
    112     det,
    113     debug=True
    114 )
    115 channel_resampler.run(event, station, det, sampling_rate=2.)
    116 signal_reconstructor.run(event, station, det)

File ~/NuRadioMC/NuRadioReco/modules/neutrinoVertexReconstructor/neutrino3DVertexReconstructor.py:302, in neutrino3DVertexReconstructor.run(self, event, station, det, debug)
    300 fig1.tight_layout()
    301 fname = '{}/{}_{}_correlation'.format(self.__debug_folder, event.get_run_number(), event.get_id())
--> 302 save_fig(fig1, fname, self.__debug_fmts)
    303 plt.close()
    304 self.__draw_pair_correlations(event)

File ~/NuRadioMC/NuRadioReco/modules/neutrinoVertexReconstructor/neutrino3DVertexReconstructor.py:1437, in save_fig(fig, fname, format)
   1435 if not fmt[0] == '.':
   1436     fmt = '.' + fmt
-> 1437 fig.savefig(fname+fmt)

File ~/.local/lib/python3.10/site-packages/matplotlib/figure.py:3390, in Figure.savefig(self, fname, transparent, **kwargs)
   3388     for ax in self.axes:
   3389         _recursively_make_axes_transparent(stack, ax)
-> 3390 self.canvas.print_figure(fname, **kwargs)

File ~/.local/lib/python3.10/site-packages/matplotlib/backend_bases.py:2193, in FigureCanvasBase.print_figure(self, filename, dpi, facecolor, edgecolor, orientation, format, bbox_inches, pad_inches, bbox_extra_artists, backend, **kwargs)
   2189 try:
   2190     # _get_renderer may change the figure dpi (as vector formats
   2191     # force the figure dpi to 72), so we need to set it again here.
   2192     with cbook._setattr_cm(self.figure, dpi=dpi):
-> 2193         result = print_method(
   2194             filename,
   2195             facecolor=facecolor,
   2196             edgecolor=edgecolor,
   2197             orientation=orientation,
   2198             bbox_inches_restore=_bbox_inches_restore,
   2199             **kwargs)
   2200 finally:
   2201     if bbox_inches and restore_bbox:

File ~/.local/lib/python3.10/site-packages/matplotlib/backend_bases.py:2043, in FigureCanvasBase._switch_canvas_and_return_print_method.<locals>.<lambda>(*args, **kwargs)
   2039     optional_kws = {  # Passed by print_figure for other renderers.
   2040         "dpi", "facecolor", "edgecolor", "orientation",
   2041         "bbox_inches_restore"}
   2042     skip = optional_kws - {*inspect.signature(meth).parameters}
-> 2043     print_method = functools.wraps(meth)(lambda *args, **kwargs: meth(
   2044         *args, **{k: v for k, v in kwargs.items() if k not in skip}))
   2045 else:  # Let third-parties do as they see fit.
   2046     print_method = meth

File ~/.local/lib/python3.10/site-packages/matplotlib/backends/backend_agg.py:497, in FigureCanvasAgg.print_png(self, filename_or_obj, metadata, pil_kwargs)
    450 def print_png(self, filename_or_obj, *, metadata=None, pil_kwargs=None):
    451     """
    452     Write the figure to a PNG file.
    453 
ref='~/.local/lib/python3.10/site-packages/matplotlib/backends/backend_agg.py:0'>0</a>;32m   (...)
    495         *metadata*, including the default 'Software' key.
    496     """
--> 497     self._print_pil(filename_or_obj, "png", pil_kwargs, metadata)

File ~/.local/lib/python3.10/site-packages/matplotlib/backends/backend_agg.py:446, in FigureCanvasAgg._print_pil(self, filename_or_obj, fmt, pil_kwargs, metadata)
    441 """
    442 Draw the canvas, then save it using `.image.imsave` (to which
    443 *pil_kwargs* and *metadata* are forwarded).
    444 """
    445 FigureCanvasAgg.draw(self)
--> 446 mpl.image.imsave(
    447     filename_or_obj, self.buffer_rgba(), format=fmt, origin="upper",
    448     dpi=self.figure.dpi, metadata=metadata, pil_kwargs=pil_kwargs)

File ~/.local/lib/python3.10/site-packages/matplotlib/image.py:1656, in imsave(fname, arr, vmin, vmax, cmap, format, origin, dpi, metadata, pil_kwargs)
   1654 pil_kwargs.setdefault("format", format)
   1655 pil_kwargs.setdefault("dpi", (dpi, dpi))
-> 1656 image.save(fname, **pil_kwargs)

File ~/.local/lib/python3.10/site-packages/PIL/Image.py:2438, in Image.save(self, fp, format, **params)
   2435         fp = builtins.open(filename, "w+b")
   2437 try:
-> 2438     save_handler(self, fp, filename)
   2439 except Exception:
   2440     if open_fp:

File ~/.local/lib/python3.10/site-packages/PIL/PngImagePlugin.py:1394, in _save(im, fp, filename, chunk, save_all)
   1392     _write_multiple_frames(im, fp, chunk, rawmode, default_image, append_images)
   1393 else:
-> 1394     ImageFile._save(im, _idat(fp, chunk), [("zip", (0, 0) + im.size, 0, rawmode)])
   1396 if info:
   1397     for info_chunk in info.chunks:

File ~/.local/lib/python3.10/site-packages/PIL/ImageFile.py:519, in _save(im, fp, tile, bufsize)
    517     _encode_tile(im, fp, tile, bufsize, fh)
    518 except (AttributeError, io.UnsupportedOperation) as exc:
--> 519     _encode_tile(im, fp, tile, bufsize, None, exc)
    520 if hasattr(fp, "flush"):
    521     fp.flush()

File ~/.local/lib/python3.10/site-packages/PIL/ImageFile.py:530, in _encode_tile(im, fp, tile, bufsize, fh, exc)
    528 encoder = Image._getencoder(im.mode, e, a, im.encoderconfig)
    529 try:
--> 530     encoder.setimage(im.im, b)
    531     if encoder.pushes_fd:
    532         encoder.setfd(fp)

SystemError: tile cannot extend outside image